
// Generated by Akka gRPC. DO NOT EDIT.
package malwaresimulator.proto

import akka.annotation.ApiMayChange


trait MalwareSimulator {
  
  
  def showNet(in: malwaresimulator.proto.ShowNetRequest): scala.concurrent.Future[malwaresimulator.proto.WholeNetwork]
  
  
  def addNode(in: malwaresimulator.proto.AddNodeRequest): scala.concurrent.Future[malwaresimulator.proto.Node]
  
  
  def addNetwork(in: malwaresimulator.proto.AddNetworkRequest): scala.concurrent.Future[malwaresimulator.proto.Network]
  
  
  def makeConnection(in: malwaresimulator.proto.MakeConnectionRequest): scala.concurrent.Future[malwaresimulator.proto.WholeNetwork]
  
}



object MalwareSimulator extends akka.grpc.ServiceDescription {
  val name = "malwaresimulator.MalwareSimulator"

  val descriptor: com.google.protobuf.Descriptors.FileDescriptor =
    malwaresimulator.proto.MalwareSimulatorProto.javaDescriptor;

  object Serializers {
    import akka.grpc.scaladsl.ScalapbProtobufSerializer
    
    val ShowNetRequestSerializer = new ScalapbProtobufSerializer(malwaresimulator.proto.ShowNetRequest.messageCompanion)
    
    val AddNodeRequestSerializer = new ScalapbProtobufSerializer(malwaresimulator.proto.AddNodeRequest.messageCompanion)
    
    val AddNetworkRequestSerializer = new ScalapbProtobufSerializer(malwaresimulator.proto.AddNetworkRequest.messageCompanion)
    
    val MakeConnectionRequestSerializer = new ScalapbProtobufSerializer(malwaresimulator.proto.MakeConnectionRequest.messageCompanion)
    
    val WholeNetworkSerializer = new ScalapbProtobufSerializer(malwaresimulator.proto.WholeNetwork.messageCompanion)
    
    val NodeSerializer = new ScalapbProtobufSerializer(malwaresimulator.proto.Node.messageCompanion)
    
    val NetworkSerializer = new ScalapbProtobufSerializer(malwaresimulator.proto.Network.messageCompanion)
    
  }

  @ApiMayChange
  object MethodDescriptors {
    import akka.grpc.internal.Marshaller
    import io.grpc.MethodDescriptor
    import Serializers._

    
    val showNetDescriptor: MethodDescriptor[malwaresimulator.proto.ShowNetRequest, malwaresimulator.proto.WholeNetwork] =
      MethodDescriptor.newBuilder()
        .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("malwaresimulator.MalwareSimulator", "ShowNet"))
        .setRequestMarshaller(new Marshaller(ShowNetRequestSerializer))
        .setResponseMarshaller(new Marshaller(WholeNetworkSerializer))
        .setSampledToLocalTracing(true)
        .build()
    
    val addNodeDescriptor: MethodDescriptor[malwaresimulator.proto.AddNodeRequest, malwaresimulator.proto.Node] =
      MethodDescriptor.newBuilder()
        .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("malwaresimulator.MalwareSimulator", "AddNode"))
        .setRequestMarshaller(new Marshaller(AddNodeRequestSerializer))
        .setResponseMarshaller(new Marshaller(NodeSerializer))
        .setSampledToLocalTracing(true)
        .build()
    
    val addNetworkDescriptor: MethodDescriptor[malwaresimulator.proto.AddNetworkRequest, malwaresimulator.proto.Network] =
      MethodDescriptor.newBuilder()
        .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("malwaresimulator.MalwareSimulator", "AddNetwork"))
        .setRequestMarshaller(new Marshaller(AddNetworkRequestSerializer))
        .setResponseMarshaller(new Marshaller(NetworkSerializer))
        .setSampledToLocalTracing(true)
        .build()
    
    val makeConnectionDescriptor: MethodDescriptor[malwaresimulator.proto.MakeConnectionRequest, malwaresimulator.proto.WholeNetwork] =
      MethodDescriptor.newBuilder()
        .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("malwaresimulator.MalwareSimulator", "MakeConnection"))
        .setRequestMarshaller(new Marshaller(MakeConnectionRequestSerializer))
        .setResponseMarshaller(new Marshaller(WholeNetworkSerializer))
        .setSampledToLocalTracing(true)
        .build()
    
  }
}
