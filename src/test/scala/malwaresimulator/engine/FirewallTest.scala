package malwaresimulator.engine

import akka.actor.testkit.typed.scaladsl.ScalaTestWithActorTestKit
import malwaresimulator.Network
import malwaresimulator.Network.AddNode
import malwaresimulator.engine.Firewall.AddRule
import malwaresimulator.engine.core.InetAddress
import malwaresimulator.nodes.Node
import malwaresimulator.nodes.Node.{Infect, MakeConnection, NodeCommand}
import org.scalatest.wordspec.AnyWordSpecLike

class FirewallTest extends ScalaTestWithActorTestKit with AnyWordSpecLike {
  "Firewall actor" in {
    "deny a specific Datagram" must {
      val probe = createTestProbe[NodeCommand]()
      val internet = spawn(Network(1, "internet", InetAddress("6.6.6.0"), 24))
      val lan0 = spawn(Network(1, "lan0", InetAddress("8.8.8.0"), 24))
      val lan1 = spawn(Network(3, "lan1", InetAddress("7.7.7.0"), 24))

      val firewall = spawn(Firewall(2, "firewall0", InetAddress("6.6.6.1")))
      val node0 = spawn(Node(3, "nodeA", InetAddress("8.8.8.1")))
      val node1 = spawn(Node(4, "nodeB", InetAddress("7.7.7.1")))

      node0 ! MakeConnection(InetAddress("8.8.8.1"), 24, lan0)
      node1 ! MakeConnection(InetAddress("7.7.7.1"), 24, lan1)

      internet ! AddNode(firewall, InetAddress("6.6.6.1"))
      lan0 ! AddNode(probe.ref, InetAddress("8.8.8.2"))
      lan0 ! AddNode(node0, InetAddress("8.8.8.1"))
      lan1 ! AddNode(node1, InetAddress("7.7.7.1"))

      firewall ! AddRule(FirewallRule("deny", ))
    }
  }
}
