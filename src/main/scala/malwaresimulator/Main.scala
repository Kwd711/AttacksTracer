package malwaresimulator

import akka.actor.typed.ActorSystem
import akka.actor.typed.scaladsl.Behaviors

import scala.util.control.NonFatal

import org.slf4j.LoggerFactory

object Main {

  val logger = LoggerFactory.getLogger("malwaresimulator.Main")

  def main(args: Array[String]): Unit = {
    val system =
      ActorSystem[MalwareSimulatorSupervisor.Operation](MalwareSimulatorSupervisor.apply, "MalwareSimulatorSystem")

    try {
      init(system)
    } catch {
      case NonFatal(e) =>
        logger.error("Terminating due to initialization failure.", e)
        system.terminate()
    }
  }

  def init(system: ActorSystem[MalwareSimulatorSupervisor.Operation]): Unit = {
    val grpcInterface =
      system.settings.config.getString("malware-simulator.grpc.interface")
    val grpcPort =
      system.settings.config.getInt("malware-simulator.grpc.port")
    val grpcService = new MalwareSimulatorServerImpl(system)
    MalwareSimulatorServer.start(
      grpcInterface,
      grpcPort,
      system,
      grpcService
    )
  }
}
