//package malwaresimulator
//
//import akka.actor.typed.ActorRef
//import malwaresimulator.Network.NetworkCommand
//import malwaresimulator.nodes.Node
//import malwaresimulator.nodes.Node.NodeCommand
//
//import scala.collection.mutable.ListBuffer
//import scala.io.StdIn.readLine
//
//class OperationTool {
//  var actors: ListBuffer[(ActorRef[NodeCommand], String)] = ListBuffer.empty
//
//  def register(actorRef: ActorRef[NodeCommand], actorType: String): Unit = {
//    actors += Tuple2(actorRef, actorType)
//  }
//
//
//
//  def mainLoop: Unit = {
//    val commandLineFormat = """(.+)[\t\s]+(.+)""".r // .rをつけると正規表現になる
//    while (true) {
//      print("Main[select num, show net/task/scenario, info, trace, scenario num, exit]: ")
//      readLine match {
////        case "show" => showActorList
////        case "trace" => startTrace
//        case commandLineFormat(k, v) => k match {
////          case "trace" => startTrace
////          case "scenario" => {
////            scenarioExecutor.setRunScenarioNum(v.toInt)
////            scenarioExecutor.execute
////          }
////          case "show" => {
////            v match {
////              case "net" | "actor" => showActorList
////              case "task" => showTaskList
////              case "scenario" => scenarioExecutor.showScenarios
////            }
////          }
////          case "info" => {
////            actors(v.toInt)._1 match {
////              case node: ActorRef[NodeCommand] => {
////                println("Default address: " + node.getAddress())
////                node.getRoutingTable().display()
////                node.getMalwares().foreach(println)
////                node.getApplications().foreach(println)
////              }
////              case fw: Firewall => {
////                println("Default address: " + fw.getAddress())
////                fw.getRoutingTable().display()
////              }
////              case n: ActorRef[NetworkCommand]     => n.displayAllNodes()
////              case a: MessageActor => println("info: " + a.toString)
////              case _               => println("unknown object.")
////            }
////          }
//          case "select" => {
//            actors(v.toInt)._1 match {
//              case browser: WebBrowserProxyApp => {
//                println("Entering browser: " + browser)
//                webBrowserAppLoop(browser)
//              }
//              case browser: WebBrowserApp => {
//                println("Entering browser: " + browser)
//                webBrowserAppLoop(browser)
//              }
//              case node: Node => {
//                println("Entering node: " + node)
//                nodeLoop(node)
//              }
//              case server: WebServerApp => println("server.")
//              case network: Network => {
//                println("Entering network: " + network)
//                networkLoop(network)
//              }
//              case malware: Malware => {
//                println("Entering malware: " + malware)
//                malwareLoop(malware)
//              }
//              case firewall: Firewall => {
//                println("Entering firewall: " + firewall)
//                firewallLoop(firewall)
//              }
//              case proxy: ProxyServerApp => {
//                println("Entering proxyServerApp: " + proxy)
//                proxyLoop(proxy)
//              }
//              case ccserver: CCServerApp => {
//                println("Entering C&Cserver: " + ccserver)
//                ccserverLoop(ccserver)
//              }
//              case smb: SmbApp => {
//                println("Entering SMBApp: " + smb)
//                smbLoop(smb)
//              }
//              case mailer: MailerApp => {
//                println("Entering Mailer: " + mailer)
//                mailerLoop(mailer)
//              }
//              case mailserver: MailServerApp => {
//                println("Entering MailServer: " + mailserver)
//                mailserverLoop(mailserver)
//              }
//              case _ => println("Unknown object.")
//            }
//          }
//          case _ => println("Command error.")
//        }
//        case "exit" | "q" => {
//          println("Bye.")
//          return // 終了
//        }
//        case _ => println("Command error.")
//      }
//    }
//  }
//}
