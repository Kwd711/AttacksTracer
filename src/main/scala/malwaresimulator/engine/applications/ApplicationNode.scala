package malwaresimulator.engine.applications

import akka.actor.typed.{ActorRef, Behavior}
import malwaresimulator.nodes.Node.{ApplicationCommand, NodeCommand}
import malwaresimulator.nodes.Socket


abstract class ApplicationNode(val node: ActorRef[NodeCommand]) {
  private[this] var port: List[Int] = List.empty
  val name: String
  var socket: Option[Socket] = None

  def response(): Behavior[ApplicationCommand]

  def setPort(port: Int): Unit = setPort(List(port))

  def setPort(ports: List[Int]): Unit = this.port = ports

  def getPort: Int = this.port.head // TODO 暫定的


//  def setNode(node: ActorRef[NodeCommand]): Unit = this.node = node

  def getNode(): ActorRef[NodeCommand] = this.node

  override def toString: String = "application(" + name + ", node=" + node + ")"

}